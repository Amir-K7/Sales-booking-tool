version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sales-booking-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sales_booking_tool
      POSTGRES_USER: sales_user
      POSTGRES_PASSWORD: sales_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sales-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sales-booking-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sales-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sales-booking-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://sales_user:sales_password@postgres:5432/sales_booking_tool
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development-jwt-secret-key
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - sales-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: sales-booking-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_APP_NAME=Sales Booking Tool
      - VITE_NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sales-network
    depends_on:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  sales-network:
    driver: bridge